{
  "name": "legaltech-mvp",
  "version": "1.0.0",
  "description": "A scalable Legal Tech MVP application",
  "main": "index.js",
  "scripts": {
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "dev:frontend": "cd frontend && npm run dev",
    "dev:backend": "cd backend && python3 -m uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload",
    "build": "npm run build:frontend && npm run build:backend",
    "build:frontend": "cd frontend && npm run build",
    "build:backend": "cd backend && pip install -r requirements.txt",
    "test": "npm run test:frontend && npm run test:backend",
    "test:frontend": "cd frontend && npm test",
    "test:backend": "cd backend && python3 -m pytest",
    "lint": "npm run lint:frontend && npm run lint:backend",
    "lint:frontend": "cd frontend && npm run lint",
    "lint:backend": "cd backend && python3 -m black . && python3 -m flake8 .",
    "typecheck": "npm run typecheck:frontend && npm run typecheck:backend",
    "typecheck:frontend": "cd frontend && npm run typecheck",
    "typecheck:backend": "cd backend && python3 -m mypy .",
    "install:all": "npm install && cd frontend && npm install && cd .. && echo 'Note: Activate venv first, then run: cd backend && pip install -r requirements.txt'",
    "install:backend": "cd backend && pip install -r requirements.txt",
    "setup:venv": "python3 -m venv venv && echo 'Virtual environment created. Activate with: source venv/bin/activate'",
    "clean": "rm -rf node_modules frontend/node_modules frontend/dist backend/__pycache__ backend/.pytest_cache"
  },
  "keywords": ["legal", "tech", "mvp", "typescript", "react", "python", "fastapi"],
  "author": "Liong Cheng Lex <chenglex1@gmail.com>",
  "license": "MIT",
  "devDependencies": {
    "concurrently": "^8.2.2",
    "husky": "^8.0.3",
    "lint-staged": "^15.2.0"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": ["npm run lint", "npm run typecheck"],
    "*.{js,jsx,ts,tsx,json,css,md}": ["prettier --write"]
  }
}